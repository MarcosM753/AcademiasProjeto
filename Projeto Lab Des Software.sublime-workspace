<?xml version='1.0' encoding='utf-8'?>
<Context>

<WatchedResource>WEB-INF/web.xml</WatchedResource>

<Resource
factory="org.apache. tomcat. jdbc.pool .DataSourceFactory"
name="jdbc/tomcatDataSource"
auth="Container"
type="javax. sal . DataSource"
initialSize="1"
maxActive="280"
maxIdle="3"
minIdle="1"
maxWait="5009"
username="postgres"
password="123"
driverClassName="org.postaresal.Driver"
validationQuery="SELECT 'OK'"
testwWhileIdle="true"
testOnBorrow="true"
numTestsPerEvictionRun="5"
timeBetweenEvictionRunsMillis="30000"
minEvictableIdleTimeMill1is="60000"
url="jdbc: postgresql : //Localhost:5432/academia" />

</Context>

package br. com. soft.repository;

=import java.math.BigInteger;


Import java.math.BigInteger;
Import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingandSortingRepository;

import org.springframework.data.repository.query.Param;

import br . com. soft .model .Employee;
// Interface paginação e grava, lista no banco

Public interface EmployeeRepository extends
PagingandSortingRepository<Employee, BigInteger> {

//Consulta so banco de dados para pesquisar cliente pelo nome
@Query ("select employee from Employee as employee inner join employee.person as person where person.name like :name")
Page<Employee> findByNameLike(OParam("name") String string, Pageable pageable);

}

package br.com.soft.repository;
import java.math.BigInteger;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingandSortingRepository;
import org.springframework.data.repository.query.Param;

import br.com.soft.model.Customer;
public interface CustomerRepository extends

PagingandSortingRepository<Customer, BigInteger> f

@Query("select customer from Customer as customer inner join customer.person as person where person.name like :name")
Page<Customer> findByName((Param("name") String name ,Pageable pageable);

}

package br. com. soft. repository;

import org.springframework.data.repository.CrudRepository;
import br.com.soft.model.User;

public interface UserRepository extends CrudRepository<User, Integer> (
User findByEmail(String email);

}

package br.com.soft.repository;

import java.math.BigInteger;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.repository.PagingandSortingRepository;

import br.com.soft.model.Activity;
// Consulta do Spring Data pela descrição da atividade
public interface ActivityRepository extends PagingandSortingRepository<Activity, BigInteger>{

Page<Activity> findByDescriptionLike(Pageable pageable, String description);

}

package br.com.soft.controller;

import org.springframework.stereotype.Controller;[]

@controller
@requestmapping("/login")
public class LoginController {
RequestMapping(method = fRequestMethod.GET, RequestMethod.POST, RequestMethod.DELETE, RequestMethod.PUT]) {

public ModelAndview doGet() {
return new ModelAndView("login");

}
